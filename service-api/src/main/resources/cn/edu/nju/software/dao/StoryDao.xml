<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nju.software.dao.StoryDao">

    <sql id="fields">
        id,
        title,
        author,
        content,
        press,
        guide,
        coverUrl,
        preCoverUrl,
        backgroundUrl,
        originSoundUrl,
        readGuide,
        price,
        createTime,
        updateTime,
        valid,
        recommend,
        tellCount,
        defaultBackGroundMusicId,
        duration,
        likeCount,
        draft,
        suggestedReadingDuration,
        isSet,
        setId,
        readTime,
        recommendTime
    </sql>

    <sql id="multiTableFields">
       story.id,
       story.title,
       story.author,
       story.content,
       story.press,
       story.guide,
       story.coverUrl,
       story.preCoverUrl,
       story.backgroundUrl,
       story.originSoundUrl,
       story.readGuide,
       story.price,
       story.createTime,
       story.updateTime,
       story.valid,
       story.recommend,
       story.tellCount,
       story.defaultBackGroundMusicId,
       story.duration,
       story.likeCount,
       story.draft,
       story.suggestedReadingDuration,
       story.readTime
    </sql>
    <sql id="storyVoFields">
        <include refid="story_fields"/>,
        <include refid="story_tag_fields"/>
    </sql>
    <sql id="story_fields">
        story.id as story_id,
        story.title as story_title,
        story.author as  story_author,
        story.content as story_content,
        story.press as story_press,
        story.guide as  story_guide,
        story.coverUrl as story_coverUrl,
        story.preCoverUrl as story_preCoverUrl,
        story.backgroundUrl as story_backgroundUrl,
        story.originSoundUrl as story_originSoundUrl,
        story.readGuide as story_readGuide,
        story.price as story_price,
        story.createTime as story_createTime,
        story.updateTime as story_updateTime,
        story.valid as story_valid
        story.isSet as story_isSet
        story.readTime as story_readTime
    </sql>
    <sql id="story_tag_fields">
        story_tag.id as  story_tag_id,
        story_tag.parentId as  story_tag_parentId,
        story_tag.content as  story_tag_content,
        story_tag.createTime as  story_tag_createTime,
        story_tag.updateTime as  story_tag_updateTime,
        story_tag.valid as  story_tag_valid,
        story_tag.iconUrl  as  story_tag_iconUrl
    </sql>
    <resultMap id="story" type="cn.edu.nju.software.entity.Story">
        <id column="id" property="id"/>
        <id column="title" property="title"/>
        <id column="author" property="author"/>
        <id column="content" property="content"/>
        <id column="press" property="press"/>
        <id column="guide" property="guide"/>
        <id column="coverUrl" property="coverUrl"/>
        <id column="preCoverUrl" property="preCoverUrl"/>
        <id column="backgroundUrl" property="backgroundUrl"/>
        <id column="originSoundUrl" property="originSoundUrl"/>
        <id column="readGuide" property="readGuide"/>
        <id column="price" property="price"/>
        <id column="createTime" property="createTime"/>
        <id column="updateTime" property="updateTime"/>
        <id column="valid" property="valid"/>
        <id column="recommend" property="recommend"/>
        <id column="tellCount" property="tellCount"/>
        <id column="defaultBackGroundMusicId" property="defaultBackGroundMusicId"/>
        <id column="duration" property="duration"/>
        <id column="likeCount" property="likeCount"/>
        <id column="draft" property="draft"/>
        <id column="isSet" property="isSet"/>
        <id column="setId" property="setId"/>
        <id column="readTime" property="readTime"/>
        <id column="suggestedReadingDuration" property="suggestedReadingDuration"/>
    </resultMap>
    <resultMap id="storyVo" type="cn.edu.nju.software.vo.StoryVo">
        <id column="story_id" property="story.id"/>
        <result column="story_title" property="story.title"/>
        <result column="story_author" property="story.author"/>
        <result column="story_content" property="story.content"/>
        <result column="story_press" property="story.press"/>
        <result column="story_guide" property="story.guide"/>
        <result column="story_coverUrl" property="story.coverUrl"/>
        <result column="story_preCoverUrl" property="story.preCoverUrl"/>
        <result column="story_backgroundUrl" property="story.backgroundUrl"/>
        <result column="story_originSoundUrl" property="story.originSoundUrl"/>
        <result column="story_readGuide" property="story.readGuide"/>
        <result column="story_createTime" property="story.createTime"/>
        <result column="story_updateTime" property="story.updateTime"/>
        <result column="story_valid" property="story.valid"/>
        <result column="story_recommend" property="story.recommend"/>
        <result column="story_tellCount" property="story.tellCount"/>
        <result column="story_defaultBackGroundMusicId" property="story.defaultBackGroundMusicId"/>
        <result column="story_duration" property="story.duration"/>
        <result column="story_likeCount" property="story.likeCount"/>
        <result column="story_draft" property="story.draft"/>
        <result column="story_readTime" property="story.readTime"/>
        <collection property="tagRelationList" ofType="cn.edu.nju.software.entity.StoryTag">
            <id column="story_tag_id" property="id"/>
            <result column="story_tag_parentId" property="parentId"/>
            <result column="story_tag_content" property="content"/>
            <result column="story_tag_createTime" property="createTime"/>
            <result column="story_tag_updateTime" property="updateTime"/>
            <result column="story_tag_valid" property="valid"/>
            <result column="story_tag_iconUrl" property="iconUrl"/>
        </collection>
    </resultMap>
    <insert id="saveStory" parameterType="cn.edu.nju.software.entity.Story" keyProperty="id" useGeneratedKeys="true">
        insert into story(
        <include refid="fields"></include>
        )
        VALUES
        (
        #{id},
        #{title},
        #{author},
        #{content},
        #{press},
        #{guide},
        #{coverUrl},
        #{preCoverUrl},
        #{backgroundUrl},
        #{originSoundUrl},
        #{readGuide},
        #{price},
        #{createTime},
        #{updateTime},
        #{valid},
        #{recommend},
        #{tellCount},
        #{defaultBackGroundMusicId},
        #{duration},
        #{likeCount},
        #{draft},
        #{suggestedReadingDuration},
        #{isSet},
        #{setId},
        #{readTime},
        #{recommendTime}
        )

    </insert>
    <insert id="addStoryLikeCount">
        update story
        set likeCount=likeCount+1
        where id=#{0} and valid = 1 and draft = 0
    </insert>

    <update id="updateStory" parameterType="cn.edu.nju.software.entity.Story">
		update story
		set
		title=#{title},
		author=#{author},
		content=#{content},
		press=#{press},
		guide=#{guide},
		coverUrl=#{coverUrl},
		preCoverUrl=#{preCoverUrl},
		backgroundUrl=#{backgroundUrl},
		originSoundUrl=#{originSoundUrl},
		readGuide=#{readGuide},
		price=#{price},
		updateTime=#{updateTime},
		defaultBackGroundMusicId=#{defaultBackGroundMusicId},
		duration=#{duration},
		draft=#{draft},
		suggestedReadingDuration=#{suggestedReadingDuration},
		setId=#{setId},
		readTime=#{readTime}
		where
		id=#{id}
	</update>
	
	<update id="updateStoryIntroduction" parameterType="cn.edu.nju.software.entity.Story">
		update story
		set
		introduction=#{introduction}
		where
		id=#{id}
	</update>

    <update id="deleteStoryById">
        update story
        set
        valid=0
        where
        id=#{0}
    </update>

    <select id="getStoryById" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where id = #{0} and valid = 1
    </select>
    
    <select id="getStoryByIdWithIntroduction" resultType="cn.edu.nju.software.vo.StoryWithIntroduction">
        select
        <include refid="fields"></include>
        introduction
        from story
        where id = #{0} and valid = 1
    </select>

    <select id="getStoryByIdHard" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where id = #{0} and isSet = 0
    </select>

    <select id="getAllStories" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and isSet = 0
    </select>

    <select id="getStoryListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and isSet = 0
        order by createTime ${sortByCreateTime}
        limit #{0},#{1}
    </select>

    <select id="getSetStoryListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and setId =0 and isSet = 0
        order by createTime ${sortByCreateTime}
        limit #{0},#{1}
    </select>
    
    <select id="getStoryNameById" resultType="string">
        select
        title
        from story
        where valid = 1 and draft = 0 and id=#{id}
    </select>

    <select id="getStoryListByIdList" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by createTime desc
        limit #{offset},#{limit}
    </select>

    <select id="getStoryListByTitle" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where title like CONCAT('%', #{0} ,'%') and valid = 1 and draft = 0 and isSet = 0
        limit #{1},#{2}
    </select>

    <select id="getTagListByIdList" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where
        and valid = 1 and draft = 0
    </select>

    <delete id="deleteHard">
        DELETE FROM story
        WHERE id = #{0}
    </delete>
    <delete id="delStoryLikeCount">
        update story
        set likeCount=likeCount-1
        where id=#{0} and draft = 0
    </delete>

    <update id="recommendStory">
        update story
        set
        recommend = 1,
        recommendTime = NOW()
        where valid = 1 and id=#{0} and recommend = 0 and draft = 0
    </update>


    <update id="cancelRecommendStory">
        update story
        set
        recommend = 0
        where valid = 1 and id=#{0} and recommend = 1
    </update>

    <select id="getRecommendedStoryListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and recommend = 1 and draft = 0 and isSet = 0
        order by recommendTime DESC
        limit #{0},#{1}
    </select>

    <select id="getSetRecommendedStoryListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and recommend = 1 and draft = 0 and setId=0
        order by recommendTime DESC
        limit #{0},#{1}
    </select>

    <select id="getStoryCount" resultType="java.lang.Integer">
        select count(id)
        from story WHERE valid = 1 and draft = 0 and isSet = 0
    </select>

    <select id="getSetStoryCount" resultType="java.lang.Integer">
        select count(id)
        from story WHERE valid = 1 and draft = 0 and setId = 0
    </select>

    <select id="getStoryCountByTitle" resultType="java.lang.Integer">
        select count(id)
        from story
        where title like CONCAT('%', #{0} ,'%') and valid = 1 and draft = 0 and isSet = 0
    </select>
    <select id="getStoryIdCountByTagIdList" resultType="java.lang.Integer">
        select count(id)
        from story
        where valid = 1 and draft = 0 and isSet = 0 and id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getRecommendedStoryCount" resultType="java.lang.Integer">
        select
        count(id)
        from story
        where valid = 1 and recommend = 1 and draft = 0 and isSet = 0
    </select>

    <select id="getSetRecommendedStoryCount" resultType="java.lang.Integer">
        select
        count(id)
        from story
        where valid = 1 and recommend = 1 and draft = 0 and setId = 0
    </select>

    <select id="getStoryCountByIdList" resultType="java.lang.Integer">
        select
        count(id)
        from story
        where valid = 1 and draft = 0 and isSet = 0 and id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getSetStoryCountByIdList" resultType="java.lang.Integer">
        select
        count(id)
        from story
        where valid = 1 and draft = 0 and setId = 0 and id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getStoryByFuzzyQuery" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="multiTableFields"/>
        From story
        LEFT JOIN tag_relation ON story.id = tag_relation.storyId
        LEFT JOIN story_tag ON tag_relation.tagId = story_tag.id
        where story.valid = 1 and draft = 0 and story.isSet = 0
        AND
        <foreach collection="queryList" item="query" index="index" open="(" separator=" OR " close=")">
            story.title like CONCAT('%', #{query} ,'%')

            OR story.author like CONCAT('%', #{query} ,'%')

            OR story.press like CONCAT('%', #{query} ,'%')

            OR story_tag.content like CONCAT('%', #{query} ,'%')
        </foreach>
        GROUP BY story.id
        limit #{offset},#{limit}
    </select>
    <select id="getStoryListByClassifyFuzzyQueryIncludeDrafts" resultType="cn.edu.nju.software.entity.Story">
        select
        story.setId,
        <include refid="multiTableFields"/>
        From story
        <if test=" tag!=null">
            LEFT JOIN tag_relation ON story.id = tag_relation.storyId
            LEFT JOIN story_tag ON tag_relation.tagId = story_tag.id
        </if>
        <where>
            story.valid = 1 and story.isSet = 0
            <if test="title!=null">
                AND story.title like CONCAT('%', #{title} ,'%')
            </if>
            <if test="author!=null">
                AND story.author like CONCAT('%', #{author} ,'%')
            </if>
            <if test="content!=null">
                AND story.content like CONCAT('%', #{content} ,'%')
            </if>
            <if test="press!=null">
                AND story.press like CONCAT('%', #{press} ,'%')
            </if>
            <if test="tag!=null">
                AND story_tag.id = #{tag}
            </if>
        </where>
        GROUP BY story.id
        limit #{offset},#{limit}
    </select>
    <select id="getStoryCountByClassifyFuzzyQueryIncludeDrafts" resultType="java.lang.Integer">
        select
        count(DISTINCT story.id)
        From story
        <if test="tag!=null">
            LEFT JOIN tag_relation ON story.id = tag_relation.storyId
            LEFT JOIN story_tag ON tag_relation.tagId = story_tag.id
        </if>
        <where>
            story.valid = 1 and story.isSet = 0
            <if test="title!=null">
                AND story.title like CONCAT('%', #{title} ,'%')
            </if>
            <if test="author!=null">
                AND story.author like CONCAT('%', #{author} ,'%')
            </if>
            <if test="content!=null">
                AND story.content like CONCAT('%', #{content} ,'%')
            </if>
            <if test="press!=null">
                AND story.press like CONCAT('%', #{press} ,'%')
            </if>
            <if test="tag!=null">
                AND story_tag.id = #{tag} 
            </if>
        </where>
    </select>
    <select id="getDraftList" resultType="cn.edu.nju.software.entity.Story">
        SELECT
        <include refid="fields"/>
        from story
        where valid = 1 and draft = 1 and isSet = 0
        limit #{0},#{1}
    </select>
    <select id="getDraftCount" resultType="java.lang.Integer">
        SELECT
        count(id)
        from story
        where valid = 1 and draft = 1 and isSet = 0
    </select>
    <select id="getStoryCountByFuzzyQuery" resultType="java.lang.Integer">
        select
        count(DISTINCT story.id)
        From story
        LEFT JOIN tag_relation ON story.id = tag_relation.storyId
        LEFT JOIN story_tag ON tag_relation.tagId = story_tag.id
        where story.valid = 1 and draft = 0 and story.isSet = 0
        AND
        <foreach collection="queryList" item="query" index="index" open="(" separator=" OR " close=")">
            story.title like CONCAT('%', #{query} ,'%')

            OR story.author like CONCAT('%', #{query} ,'%')

            OR story.press like CONCAT('%', #{query} ,'%')

            OR story_tag.content like CONCAT('%', #{query} ,'%')
        </foreach>

    </select>
    <select id="getAllStoriesIncludeDrafts" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and isSet = 0
    </select>
    <select id="getStoryListByPageIncludeDrafts" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and isSet = 0
        order by createTime desc
        limit #{0},#{1}
    </select>
    <select id="getStoryCountIncludeDrafts" resultType="java.lang.Integer">
        select count(id)
        from story WHERE valid = 1 and isSet = 0
    </select>
    <select id="getStoryByIdIncludeDrafts" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where id = #{0} and valid = 1 and isSet = 0
    </select>
    <select id="getStoryCountByTitleIncludeDrafts" resultType="java.lang.Integer">
        select count(id)
        from story
        where title like CONCAT('%', #{0} ,'%') and valid = 1 and isSet = 0
    </select>
    <select id="getExactStoryByTitle" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"/>
        from story
        where title = #{title} and valid = 1 and isSet = 0
    </select>

    <select id="getStoryVoByIdList" resultMap="storyVo">
        select
        <include refid="storyVoFields"/>
        from (select * from story where isSet = 0 and id in
        <foreach collection="idList" item="id" open="(" separator="," close=")">#{id}</foreach>) as story
        left outer join (SELECT storyId,tagId FROM tag_relation ) AS tag_relation ON tag_relation.storyId=story.id
        left outer join (SELECT id,parentId,content,createTIme,updateTime,valid,iconUrl FROM story_tag WHERE parentId =
        100038 AND valid = 1)
        AS story_tag ON story_tag.id = tag_relation.tagId
    </select>

    <select id="getRecommendedStoryIdListByPage" resultType="java.lang.Integer">
        select id
        from story
        where valid = 1 and recommend = 1 and isSet = 0
        limit #{offset},#{limit}
    </select>

    <select id="getRecommendStoryListByPage" resultType="java.lang.Integer">
        select id
        from story
        where valid = 1 and recommend = 1 and isSet = 0
        limit #{offset},#{limit}
    </select>


    <update id="newTell">
        update story
        set
        tellCount = tellCount+1
        where valid = 1 and id=#{0}
    </update>

    <update id="deleteTell">
        update story
        set
        tellCount = tellCount-1
        where valid = 1 and id=#{0}
    </update>
    <update id="setDraftCompleteByStoryId">
        update story
        set
        dratf=0
        where valid=1 and id=#{storyId}
    </update>
	
	<select id="getStoryListByIdListByPage" resultType="cn.edu.nju.software.entity.Story">
		select 
		<include refid="fields"></include>
        from story where valid=1 and draft=0 and id in
        <foreach collection="storyIdList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by createTime desc , likeCount desc
	</select>

    <select id="getSetStoryListByIdListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story where setId = 0 and valid=1 and draft=0 and id in
        <foreach collection="storyIdList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getStoryListBySetId" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where setId=#{0} and isSet=0 and valid=1
        limit #{1},#{2}
    </select>

    <select id="getStoryCountBySetId" resultType="java.lang.Integer">
        select
        count(id)
        from story
        where setId=#{0} and isSet=0 and valid=1
    </select>

    <select id="getSetStoryListByIdList" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and setId = 0 and id in
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        limit #{offset},#{limit}
    </select>

    <select id="getStoryListBySecondLevelTagId" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="multiTableFields"></include>
        from tag_relation tr left join story on tr.storyId = story.id
        where tr.tagId = #{tagId} and story.valid = 1 and story.draft = 0 and visibility = 255
        order by story.createTime DESC
        limit #{offset},#{limit}
    </select>

    <select id="getStoryCountBySecondLevelTagId" resultType="java.lang.Integer">
        select
        count(story.id)
        from tag_relation tr left join story on tr.storyId = story.id
        where tr.tagId = #{tagId} and story.valid = 1 and story.draft = 0 and visibility = 255
    </select>

    <select id="getPopularOriginalStoryListByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="multiTableFields"></include>
        from tag_relation tr left join story on tr.storyId = story.id
        where tr.tagId = 100124 and story.valid = 1 and story.draft = 0 and visibility = 255
        order by story.tellCount DESC, story.likeCount DESC
        limit #{offset},#{limit}
    </select>
    
    <select id="getStoryListByReadLog" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and recommend = 1 and isSet = 0
    </select>
    
    <select id="getMostPopularStoryByPage" resultType="cn.edu.nju.software.entity.Story">
        select
        <include refid="fields"></include>
        from story
        where valid = 1 and draft = 0 and setId =0 and isSet = 0
        ORDER by tellCount DESC, likeCount DESC
        limit #{0},#{1}
    </select>

</mapper>