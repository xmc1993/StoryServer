<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.nju.software.dao.MessagePushMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.nju.software.entity.MessagePush" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ticker" property="ticker" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="destinationId" property="destinationId" jdbcType="INTEGER" />
    <result column="startTime" property="startTime" jdbcType="TIMESTAMP" />
    <result column="expireTime" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pushType" property="pushType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ticker, title, text, destinationId, startTime, expireTime, createTime, pushType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.nju.software.entity.MessagePushExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_push
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from message_push
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message_push
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nju.software.entity.MessagePushExample" >
    delete from message_push
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nju.software.entity.MessagePush" >
    insert into message_push (id, ticker, title, 
      text, destinationId, startTime, 
      expireTime, createTime, pushType
      )
    values (#{id,jdbcType=INTEGER}, #{ticker,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{text,jdbcType=VARCHAR}, #{destinationId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{expireTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{pushType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nju.software.entity.MessagePush" >
    insert into message_push
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ticker != null" >
        ticker,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="destinationId != null" >
        destinationId,
      </if>
      <if test="startTime != null" >
        startTime,
      </if>
      <if test="expireTime != null" >
        expireTime,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="pushType != null" >
        pushType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ticker != null" >
        #{ticker,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="destinationId != null" >
        #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushType != null" >
        #{pushType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nju.software.entity.MessagePushExample" resultType="java.lang.Integer" >
    select count(*) from message_push
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message_push
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ticker != null" >
        ticker = #{record.ticker,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null" >
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.destinationId != null" >
        destinationId = #{record.destinationId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        startTime = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null" >
        expireTime = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushType != null" >
        pushType = #{record.pushType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message_push
    set id = #{record.id,jdbcType=INTEGER},
      ticker = #{record.ticker,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
      destinationId = #{record.destinationId,jdbcType=INTEGER},
      startTime = #{record.startTime,jdbcType=TIMESTAMP},
      expireTime = #{record.expireTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      pushType = #{record.pushType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nju.software.entity.MessagePush" >
    update message_push
    <set >
      <if test="ticker != null" >
        ticker = #{ticker,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="destinationId != null" >
        destinationId = #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        expireTime = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushType != null" >
        pushType = #{pushType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nju.software.entity.MessagePush" >
    update message_push
    set ticker = #{ticker,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      destinationId = #{destinationId,jdbcType=INTEGER},
      startTime = #{startTime,jdbcType=TIMESTAMP},
      expireTime = #{expireTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      pushType = #{pushType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>