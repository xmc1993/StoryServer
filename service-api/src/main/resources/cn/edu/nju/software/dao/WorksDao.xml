<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nju.software.dao.WorksDao">

    <sql id="fields">
        id,
        storyId,
        storyTitle,
        userId,
        username,
        url,
        likeCount,
        createTime,
        updateTime,
        valid,
        headImgUrl,
        coverUrl,
        duration,
        reviewCount,
        listenCount,
        storySetId
    </sql>
    <sql id="multiTableFields">
    	works.id,
        works.storyId,
        works.storyTitle,
        works.userId,
        works.username,
        works.url,
        works.likeCount,
        works.createTime,
        works.updateTime,
        works.valid,
        works.headImgUrl,
        works.coverUrl,
        works.duration,
        works.reviewCount,
        works.listenCount
    </sql>
    <delete id="delReviewCount">
        update works
        SET
        reviewCount=reviewCount-1
        where id = #{workId} and valid =1
    </delete>

    <resultMap id="works" type="cn.edu.nju.software.entity.Works">
        <id column="id" property="id"/>
        <id column="storyId" property="storyId"/>
        <id column="storyTitle" property="storyTitle"/>
        <id column="userId" property="userId"/>
        <id column="username" property="username"/>
        <id column="url" property="url"/>
        <id column="likeCount" property="likeCount"/>
        <id column="createTime" property="createTime"/>
        <id column="updateTime" property="updateTime"/>
        <id column="valid" property="valid"/>
        <id column="headImgUrl" property="headImgUrl"/>
        <id column="coverUrl" property="coverUrl"/>
        <id column="duration" property="duration"/>
        <id column="reviewCount" property="reviewCount"/>
        <id column="listenCount" property="listenCount"/>
    </resultMap>
    

    <insert id="saveWorks" parameterType="cn.edu.nju.software.entity.Works" keyProperty="id" useGeneratedKeys="true">
        insert into works(
        <include refid="fields"></include>
        )
        VALUES
        (
        #{id},
        #{storyId},
        #{storyTitle},
        #{userId},
        #{username},
        #{url},
        #{likeCount},
        #{createTime},
        #{updateTime},
        #{valid},
        #{headImgUrl},
        #{coverUrl},
        #{duration},
        #{reviewCount},
        #{listenCount},
        #{storySetId}
        )
    </insert>
    <insert id="addReviewCount">
        update works
        SET reviewCount=reviewCount+1
        where id = #{workId} and valid = 1
    </insert>

    <update id="deleteWorksById">
        update works
        set
        valid=0
        where
        id=#{0}
    </update>

    <insert id="addListenCount">
        update works
        SET listenCount=listenCount+1
        where id = #{workId} and valid = 1
    </insert>

    <update id="updateWorks">
        update works
        set
        storyTitle=#{storyTitle},
        reviewCount=#{reviewCount},
        listenCount=#{listenCount},
        headImgUrl=#{headImgUrl},
        coverUrl=#{coverUrl},
        url=#{url},
        duration=#{duration},
        updateTime=#{updateTime}
        where
        id = #{id} and valid = 1
    </update>
    
    <select id="getWorksByUserAndStory" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where valid = 1 and userId=#{userId} and storyId=#{storyId}
    </select>

    <select id="getStoryTagById" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where id = #{0} and valid = 1
    </select>

    <select id="getWorksByIdHard" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where id = #{0}
    </select>

    <select id="getWorksById" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where id = #{0} and valid = 1
    </select>

    <select id="getWorksListByStoryId" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where storyId = #{0} and valid = 1
        order by likeCount desc
        limit #{1},#{2}
    </select>
    
    <select id="getUserIdListByStoryId" resultType="java.lang.Integer">
        select
        userId
        from works
        where storyId = #{0} and valid = 1
        order by likeCount desc
    </select>
    
    <select id="getStoryIdListByUserId" resultType="java.lang.Integer">
        select
        DISTINCT storyId
        from works
        where userId = #{0} and valid = 1
    </select>

    <select id="getWorkIdListByUserId" resultType="java.lang.Integer">
        select
        id
        from works
        where userId = #{0} and valid = 1
    </select>

    <select id="getWorksListByUserId" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where userId = #{0} and valid = 1
        ORDER BY createTime DESC
        limit #{1},#{2}
    </select>

    <update id="updateUserName">
        update works
        set
        username=#{1}
        where
        userId = #{0}
    </update>


    <update id="updateStoryTitle">
        update works
        set
        storyTitle=#{1}
        where
        storyId = #{0}
    </update>

    <update id="updateCoverUrl">
        update works
        set
        coverUrl=#{1}
        where
        storyId = #{0}
    </update>

    <update id="updateHeadImg">
        update works
        set
        headImgUrl=#{1}
        where
        userId = #{0} and valid =1
    </update>
    <update id="setDelReviewCount">
        update works
        set reviewCount = reviewCount-#{delReviewCount}
        where workId = #{workId}
    </update>

    <select id="getWorksListByIdList" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where valid = 1 and id IN
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getWorksCount" resultType="java.lang.Integer">
        select
        count(id)
        from works
        where valid = 1
    </select>
    <select id="getWorksCountByUserId" resultType="java.lang.Integer">
        select
        count(id)
        from works
        where valid = 1 and userId=#{userId}
    </select>
    <select id="getWorksCountByStoryId" resultType="java.lang.Integer">
        select
        count(id)
        from works
        where valid = 1 and storyId=#{storyId}
    </select>
    <select id="getWorksCountByIdList" resultType="java.lang.Integer">
        select count(*)
        from works
        where valid = 1 and id IN
        <foreach collection="idList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getLatestWorksByPage" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where valid = 1
        ORDER By createTime DESC
        limit #{0},#{1}
    </select>

    <select id="getMostPopularByPage" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where valid = 1
        ORDER by listenCount DESC, likeCount DESC
        limit #{0},#{1}
    </select>

	<select id="getFirstWorkByPlayIdList" resultType="cn.edu.nju.software.entity.TwoTuple">
		select 
		w.coverUrl as value,plr.playListId as id
		from works as w
		left join play_list_relation as plr on w.id = plr.worksId
		where valid = 1
		and plr.playListId in
		<foreach collection="playIdList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        and plr.worksId = (select worksId from play_list_relation  where playListId = plr.playListId limit 1)        
	</select>
	
	<select id="getWorksListByStoryIdList" resultType="cn.edu.nju.software.entity.Works">
		select  
		<include refid="fields"></include>
		from works where storyId in 
		<foreach collection="storyIdList" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by updateTime
	</select>

    <select id="getUserIdByWorkId">
        select userId from works where id =#{worksId}
    </select>

    <select id="getWorksAfterSomeDate">
        select count(id) from works where user_id=#{0} and createTime &gt; #{1}
    </select>

    <update id="newLike">
      update works
      set likeCount = likeCount+1
      where id=#{0} and valid=1
    </update>

    <update id="cancelLike">
      update works
      set likeCount = likeCount-1
      where id=#{0} and valid=1
    </update>

    <select id="getWorksListByOrderRule" resultType="cn.edu.nju.software.entity.Works">
        select
        <include refid="fields"></include>
        from works
        where valid = 1
        ORDER By ${fieldName} ${orderRule}
        limit #{0},#{1}
    </select>
</mapper>