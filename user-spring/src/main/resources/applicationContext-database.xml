<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <property name="poolProperties">
            <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
                <property name="driverClassName" value="${jdbc.driverClassName}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
                <property name="jmxEnabled" value="${tomcat.jdbc.jmxEnabled}"/>
                <property name="testWhileIdle" value="${tomcat.jdbc.testWhileIdle}"/>
                <property name="testOnBorrow" value="${tomcat.jdbc.testOnBorrow}"/>
                <property name="testOnReturn" value="${tomcat.jdbc.testOnReturn}"/>
                <property name="validationInterval" value="${tomcat.jdbc.validationInterval}"/>
                <property name="validationQuery" value="${tomcat.jdbc.validationQuery}"/>
                <property name="timeBetweenEvictionRunsMillis" value="${tomcat.jdbc.timeBetweenEvictionRunsMillis}"/>
                <property name="maxActive" value="${tomcat.jdbc.maxActive}"/>
                <property name="initialSize" value="${tomcat.jdbc.initialSize}"/>
                <property name="maxWait" value="${tomcat.jdbc.maxWait}"/>
                <property name="minEvictableIdleTimeMillis" value="${tomcat.jdbc.minEvictableIdleTimeMillis}"/>
                <property name="maxIdle" value="${tomcat.jdbc.maxIdle}"/>
                <property name="minIdle" value="${tomcat.jdbc.minIdle}"/>
                <property name="logAbandoned" value="${tomcat.jdbc.logAbandoned}"/>
                <property name="jdbcInterceptors" value="${tomcat.jdbc.jdbcInterceptors}"/>
            </bean>
        </property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:cn/edu/nju/software/dao/*Dao.xml</value>
                <value>classpath*:cn/edu/nju/software/dao/user/*Dao.xml</value>
            </list>
        </property>
        <property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageInterceptor">
		        <property name="properties">
		          <!--使用下面的方式配置参数，一行配置一个 -->
		          <value>
		          helperDialect=mysql
                  reasonable=true
                  supportMethodsArguments=true
                  autoRuntimeDialect=true
		          </value>
		        </property>
		      </bean>
		    </array>
  		</property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:sqlSessionFactoryBeanName="sqlSessionFactory"
          p:basePackage="cn.edu.nju.software.dao"/>

    <!-- service层事务配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <!-- 注解通知 -->
     <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- 配置通知 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="publish" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* cn.edu.nju.software.service..*Impl.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config>

</beans>
